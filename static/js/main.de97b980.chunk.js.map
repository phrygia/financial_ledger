{"version":3,"sources":["assets/css/pay.module.css","assets/css/modal.module.css","assets/css/calendar.module.css","assets/css/header.module.css","assets/css/notFound.module.css","assets/css/user.module.css","components/common/Modal.js","components/common/Header.js","components/main/Main.js","components/common/NotFound.js","components/user/User.js","components/reducers/reducer.js","components/reducers/types.js","components/pay/Calendar.js","components/pay/FullCalendar.js","components/pay/Pay.js","App.js","reportWebVitals.js","index.js","assets/css/main.module.css"],"names":["module","exports","Modal","props","open","close","header","confirm","agree","editText","edit","Icon","icon","className","style","onClick","color","children","btn","Header","useState","modalOpen","setModalOpen","useContext","store","state","dispatch","history","useHistory","url","location","pathname","edit_info","classes","class","useEffect","window","performance","navigation","type","localStorage","removeItem","userEdit","push","to","user_name","money_list","CgUserRemove","CgUserAdd","Main","sort","a","b","Date","date","list","setList","tabClass","setTabClass","iconType","iconInfo","handleList","e","target","innerText","ar","map","val","spending","List","i","same","typeSpend","typeIdx","findIndex","v","kinds","borderColor","spendContent","price","Obj","info","setItem","JSON","stringify","handleEdit","filterVal","parse","getItem","filter","number","handleRemove","length","NotFound","User","name","userName","setUserName","value","onChange","maxLength","placeholder","alert","userObj","reducer","action","Calendar","setDate","setCalendarHeight","clicked","setClicked","editMode","firstDate","lastDate","year","month","today","prevCalendar","nextCalendar","on","setOn","selected","setSelected","calendar","useRef","hasToday","condition","getFullYear","getMonth","months","String","current","clientHeight","getEditDate","Number","split","blank","Array","getDay","getDate","selectYear","selectMonth","now","readOnly","days","ref","FullCalendar","setYear","setMonth","Pay","calendarHeight","day","setDay","setSpending","setSpendContent","setPrice","login","console","log","getFullDate","handleSpending","marginTop","id","htmlFor","required","existingEntries","editInfo","filterInfo","initialState","React","createContext","App","useReducer","Provider","basename","process","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.de97b980.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"pay_container\":\"pay_pay_container__oBKgW\",\"notLogin\":\"pay_notLogin__Jw8Cq\",\"pay_form\":\"pay_pay_form__fG8Vp\",\"date\":\"pay_date__3Jfj_\",\"kinds\":\"pay_kinds__1msfK\",\"content\":\"pay_content__2NDbR\",\"on\":\"pay_on__31bsT\",\"price\":\"pay_price__2UOoy\",\"send\":\"pay_send__98Vm4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"modal_modal__2nZBL\",\"modal-show\":\"modal_modal-show__2a3Aj\",\"header\":\"modal_header__1iU_Z\",\"btn\":\"modal_btn__1syh6\",\"openModal\":\"modal_openModal__3PJJF\",\"modal-bg-show\":\"modal_modal-bg-show__3T5mE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"calendar_container\":\"calendar_calendar_container__1SCUg\",\"calendar_ym\":\"calendar_calendar_ym__2DiBG\",\"day\":\"calendar_day__WDBQ-\",\"today\":\"calendar_today__1Sbgk\",\"on\":\"calendar_on__2qe7q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__iLMm9\",\"main\":\"header_main__1PNlQ\",\"pay\":\"header_pay__2fQAn\",\"btn\":\"header_btn__3gNA6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"notFound_container__9TFJo\",\"top\":\"notFound_top__3LUOG\",\"text\":\"notFound_text__3_Xns\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user_form\":\"user_user_form__2ARsf\",\"cancel_btn\":\"user_cancel_btn__3CFSg\"};","import React from \"react\";\nimport { IoMdClose } from \"react-icons/io\";\nimport style from \"../../assets/css/modal.module.css\";\n\nconst Modal = (props) => {\n  // 열기, 닫기, 모달 헤더 텍스트를 부모로부터 받아옴\n  const { open, close, header, confirm, agree, editText, edit } = props;\n  const Icon = props.icon;\n\n  return (\n    // 모달이 열릴때 openModal 클래스가 생성된다.\n    <div\n      className={open ? `${style['openModal']} ${style['modal']}` : `${style.['modal']}`}\n    >\n      {open ? (\n        <section>\n          <div className={style.header}>\n            {close && (\n              <button onClick={close}>\n                <IoMdClose color=\"#323232\" />\n              </button>\n            )}\n            <Icon color=\"#f55c34\" />\n            <h1>{header}</h1>\n            <p>{props.children}</p>\n          </div>\n          <div className={style.btn}>\n            {agree && <button onClick={confirm}>{agree}</button>}\n            {editText && <button onClick={edit}>{editText}</button>}\n          </div>\n        </section>\n      ) : null}\n    </div>\n  );\n};\nexport default Modal;\n","import React, { useEffect, useState, useContext } from 'react';\nimport { useHistory, Link } from 'react-router-dom';\nimport { IoArrowBack } from 'react-icons/io5';\nimport { FiGrid } from 'react-icons/fi';\nimport { HiOutlineTrash } from 'react-icons/hi';\nimport { CgUserAdd, CgUserRemove } from 'react-icons/cg';\nimport { store } from '../../App';\nimport style from '../../assets/css/header.module.css';\nimport Modal from './Modal';\n\nconst Header = (props) => {\n    const [modalOpen, setModalOpen] = useState(false);\n    const [state, dispatch] = useContext(store);\n    const history = useHistory();\n    const url = history.location.pathname;\n    const edit = state.edit_info ? state.edit_info : null; // 수정모드 체크\n    const classes = props.class ? style[props.class] : '';\n\n    useEffect(() => {\n        // 수정모드가 아닐때 메인, 로그인 페이지에서 수정모드정보 삭제\n        // 수정모드면 수정모드정보 유지\n        if (window.performance) {\n            if (performance.navigation.type === 1) {\n                if (url !== '/pay' && state.edit_info !== null) {\n                    localStorage.removeItem('edit_info');\n                    dispatch({ type: 'EDIT_MONEY_IFNO', edit_info: null });\n                }\n            }\n        }\n    }, []);\n\n    const openModal = () => {\n        setModalOpen(true);\n    };\n\n    const closeModal = () => {\n        setModalOpen(false);\n    };\n\n    const confirm = () => {\n        localStorage.removeItem('money_list');\n        dispatch({ type: 'ADD_MONEY_IFNO', money_list: [] });\n        setModalOpen(false);\n        history.push('/');\n    };\n\n    const userEdit = () => {\n        history.push('/user');\n    };\n\n    return (\n        <header className={`${style['header']} ${classes}`}>\n            {url === '/pay' ? (\n                <>\n                    <Link to={'/'} className={style['btn']}>\n                        <IoArrowBack color=\"#fff\" />\n                    </Link>\n                    <h1>{edit ? '거래 수정하기' : '거래 추가하기'}</h1>\n                </>\n            ) : (\n                <>\n                    <h1>Money book</h1>\n                    <button onClick={openModal}>\n                        {state.user_name && <HiOutlineTrash color=\"#323232\" />}\n                    </button>\n                </>\n            )}\n            {state.user_name ? (\n                <Modal\n                    open={modalOpen}\n                    confirm={confirm}\n                    close={closeModal}\n                    edit={userEdit}\n                    icon={CgUserRemove}\n                    header={`${state['user_name']} 사용자 삭제`}\n                    agree=\"삭제하기\"\n                    editText=\"수정하기\"\n                >\n                    삭제버튼을 누르시면 사용자의 전체 기록 및 <br />\n                    정보가 삭제되고 복구 할 수 없습니다.\n                </Modal>\n            ) : (\n                <>\n                    {url !== '/pay' ? (\n                        <Link to={'/user'} className={style['btn']}>\n                            <FiGrid color=\"#323232\" />\n                        </Link>\n                    ) : (\n                        <Modal\n                            open={true}\n                            confirm={userEdit}\n                            icon={CgUserAdd}\n                            header=\"등록된 사용자가 없습니다\"\n                            agree=\"이동하기\"\n                        >\n                            내역을 입력하고 싶으시면 <br />\n                            새로운 사용자를 입력해 주세요.\n                        </Modal>\n                    )}\n                </>\n            )}\n        </header>\n    );\n};\n\nexport default Header;\n","import React, { useState, useContext } from 'react';\nimport { useHistory, Link } from 'react-router-dom';\nimport Header from '../common/Header';\nimport { store } from '../../App';\n// import { HiOutlineShoppingBag } from \"react-icons/hi\";\nimport {\n    IoRemoveCircleSharp,\n    IoFastFoodOutline,\n    IoSubwayOutline,\n} from 'react-icons/io5';\n// import { IoMdRemoveCircle } from \"react-icons/io\";\nimport { FaUserFriends } from 'react-icons/fa';\nimport { FiCoffee } from 'react-icons/fi';\nimport { RiMovie2Line } from 'react-icons/ri';\nimport { GiPartyPopper } from 'react-icons/gi';\nimport { BsBook } from 'react-icons/bs';\nimport { CgGym } from 'react-icons/cg';\nimport {\n    MdOutlineShoppingBasket,\n    MdOutlineArrowForwardIos,\n} from 'react-icons/md';\nimport style from '../../assets/css/main.module.css';\n\nfunction Main() {\n    const [state, dispatch] = useContext(store);\n    let { money_list } = state;\n    money_list.sort((a, b) => {\n        // 날짜 정렬\n        const d1 = new Date(a.date);\n        const d2 = new Date(b.date);\n        return d1 - d2;\n    });\n    const [list, setList] = useState(money_list);\n    const [tabClass, setTabClass] = useState('전체내역');\n    const iconType = [\n        <IoFastFoodOutline color=\"#9b1b30\" />,\n        <MdOutlineShoppingBasket color=\"#5a5b9f\" />,\n        <IoSubwayOutline color=\"#e2583e\" />,\n        <FiCoffee color=\"#955251\" />,\n        <FaUserFriends color=\"#c74375\" />,\n        <RiMovie2Line color=\"#53b0ae\" />,\n        <GiPartyPopper color=\"#88b04b\" />,\n        <BsBook color=\"#5f4b8b\" />,\n        <CgGym color=\"#0c4a86\" />,\n    ];\n    const iconInfo = [\n        { type: 'food', color: '#9b1b30' },\n        { type: 'shopping', color: '#5a5b9f' },\n        { type: 'transportation', color: '#e2583e' },\n        { type: 'coffee', color: '#955251' },\n        { type: 'date', color: '#c74375' },\n        { type: 'culture', color: '#53b0ae' },\n        { type: 'event', color: '#88b04b' },\n        { type: 'selfImprovement', color: '#5f4b8b' },\n        { type: 'exercise', color: '#0c4a86' },\n    ];\n    const history = useHistory();\n\n    const handleEdit = (val) => {\n        const Obj = { info: val };\n        localStorage.setItem('edit_info', JSON.stringify(Obj));\n        dispatch({ type: 'EDIT_MONEY_IFNO', edit_info: Obj });\n        history.push('/pay');\n    };\n\n    const handleRemove = (val) => {\n        let existingEntries = JSON.parse(localStorage.getItem('money_list'));\n        const filterVal = existingEntries.filter((v) => {\n            if (val.number !== v.number && val.date !== v.date) return v;\n        });\n        localStorage.setItem('money_list', JSON.stringify(filterVal));\n        dispatch({ type: 'ADD_MONEY_IFNO', money_list: filterVal });\n        setList(filterVal);\n    };\n\n    const handleList = (e) => {\n        const target = e.target.innerText;\n        setTabClass(target);\n        if (target === '전체내역') {\n            setList(money_list);\n        } else {\n            let ar = [];\n            money_list.map((val) => {\n                if (val.spending === target) ar.push(val);\n            });\n            setList(ar);\n        }\n    };\n\n    const List = list.map((val, i) => {\n        // 수입, 지출에 따라 값 필터\n        const same = i > 0 && list[i - 1].date === list[i].date;\n        const typeSpend = val.spending === '수입';\n        const typeIdx = iconInfo.findIndex((v) => v.type === val.kinds);\n\n        return (\n            <li key={i} className={same ? style['same'] : style['each']}>\n                {!same && <h2>{val.date}</h2>}\n                <ul>\n                    <li>\n                        <div\n                            className={style['icon_box']}\n                            style={{ borderColor: iconInfo[typeIdx].color }}\n                        >\n                            {iconType[typeIdx]}\n                        </div>\n                        <div>\n                            <b>{val.kinds}</b>\n                            <p>{val.spendContent}</p>\n                        </div>\n                    </li>\n                    <li>\n                        <span\n                            className={\n                                typeSpend ? style['income'] : style['cost']\n                            }\n                        >\n                            {typeSpend ? '+ ' : '- '}\n                            {val.price}\n                        </span>\n                        <button onClick={() => handleEdit(val)}>\n                            <MdOutlineArrowForwardIos color=\"#adacb4\" />\n                        </button>\n                    </li>\n                </ul>\n                <button\n                    onClick={() => handleRemove(val)}\n                    className={style['remove_btn']}\n                >\n                    삭제하기\n                </button>\n            </li>\n        );\n    });\n\n    return (\n        <>\n            <Header class=\"main\" />\n            <div className={style['tab_container']}>\n                <button\n                    onClick={handleList}\n                    className={tabClass === '전체내역' ? style['on'] : ''}\n                >\n                    전체내역\n                </button>\n                <button\n                    onClick={handleList}\n                    className={tabClass === '수입' ? style['on'] : ''}\n                >\n                    수입\n                </button>\n                <button\n                    onClick={handleList}\n                    className={tabClass === '지출' ? style['on'] : ''}\n                >\n                    지출\n                </button>\n            </div>\n            <ul className={style['book_list']}>\n                {list.length === 0 ? (\n                    <li className={style['empty']}>거래내역이 없습니다.</li>\n                ) : (\n                    List\n                )}\n            </ul>\n            <Link className={style['add_btn']} to={'/pay'}>\n                내역 추가하기\n            </Link>\n        </>\n    );\n}\n\nexport default Main;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport style from '../../assets/css/notFound.module.css';\n\nfunction NotFound() {\n    return (\n        <section className={style['container']}>\n            <div className={style['top']}>\n                <h1>\n                    4<span>0</span>4\n                </h1>\n            </div>\n            <div className={style['text']}>\n                <h3>페이지를 찾을 수 없습니다</h3>\n                <p>\n                    페이지가 존재하지 않거나, 사용할 수 없는 페이지입니다.\n                    <br /> 입력하신 주소가 정확한지 다시 한 번 확인해주세요.\n                </p>\n                <Link to=\"/\">메인으로</Link>\n            </div>\n        </section>\n    );\n}\n\nexport default NotFound;\n","import React, { useState, useContext } from 'react';\nimport { useHistory, Link } from 'react-router-dom';\nimport { GiWallet } from 'react-icons/gi';\nimport { store } from '../../App';\nimport style from '../../assets/css/user.module.css';\n\nfunction User() {\n    const [state, dispatch] = useContext(store);\n    const history = useHistory();\n    const { user_name } = state;\n    const name = user_name ? user_name : '';\n    const [userName, setUserName] = useState(name);\n\n    const onChange = (e) => {\n        setUserName(e.target.value);\n    };\n\n    const onClick = () => {\n        if (userName.length === 0) return alert('이름을 입력해주세요');\n        const userObj = { name: userName };\n        localStorage.setItem('userName', JSON.stringify(userObj));\n        dispatch({ type: 'SET_USER_NAME', user_name: userName });\n        history.push('/');\n    };\n\n    return (\n        <section className={style['user_form']}>\n            <header>\n                <div>\n                    <GiWallet color=\"#323232\" />\n                </div>\n            </header>\n            <form>\n                {user_name ? (\n                    <>\n                        <h1>사용자 수정</h1>\n                        <p>새로운 사용자를 입력해주세요.</p>\n                    </>\n                ) : (\n                    <>\n                        <h1>사용자 입력</h1>\n                        <p>시작 전 사용자를 입력해주세요.</p>\n                    </>\n                )}\n\n                <input\n                    value={userName}\n                    onChange={onChange}\n                    maxLength=\"10\"\n                    placeholder=\"이름 (1~10글자)\"\n                />\n            </form>\n            <button onClick={onClick}>\n                {user_name ? '수정하기' : '시작하기'}\n            </button>\n            {user_name && (\n                <Link to=\"/\" className={style['cancel_btn']}>\n                    취소하기\n                </Link>\n            )}\n        </section>\n    );\n}\n\nexport default User;\n","import { SET_USER_NAME, ADD_MONEY_IFNO, EDIT_MONEY_IFNO } from \"./types\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case SET_USER_NAME:\n      return {\n        ...state,\n        user_name: action.user_name,\n      };\n    case ADD_MONEY_IFNO:\n      return {\n        ...state,\n        money_list: action.money_list,\n      };\n    case EDIT_MONEY_IFNO:\n      return {\n        ...state,\n        edit_info: action.edit_info,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","export const SET_USER_NAME = \"SET_USER_NAME\";\nexport const ADD_MONEY_IFNO = \"ADD_MONEY_IFNO\";\nexport const EDIT_MONEY_IFNO = \"EDIT_MONEY_IFNO\";\n","import React, { useEffect, useState, useRef } from 'react';\nimport { MdArrowBackIos, MdArrowForwardIos } from 'react-icons/md';\nimport style from '../../assets/css/calendar.module.css';\n\nconst Calendar = (props) => {\n    const {\n        setDate,\n        setCalendarHeight,\n        clicked,\n        setClicked,\n        editMode,\n        firstDate,\n        lastDate,\n        year,\n        month,\n        today,\n        prevCalendar,\n        nextCalendar,\n    } = props;\n\n    const [on, setOn] = useState('');\n    const [selected, setSelected] = useState(null);\n    const calendar = useRef();\n    const hasToday = new Date(year, month - 1);\n    const condition =\n        today.getFullYear() + today.getMonth() ===\n        hasToday.getFullYear() + hasToday.getMonth();\n    const months = String(month).length === 1 ? `0${month}` : month;\n\n    useEffect(() => {\n        // 달력마다 높이값이 다르기 때문에\n        setCalendarHeight(calendar.current.clientHeight + 55);\n\n        /* \n      수정모드 - 아직 한번도 클릭하지 않았을때\n                선택한 값의 날짜를 상태값으로 불러옴\n    */\n        if (editMode && !clicked) {\n            const getEditDate = editMode.info.date;\n            setOn(Number(getEditDate.split('-')[2]) - 1);\n            setSelected(new Date(getEditDate));\n        }\n    }, [month]);\n\n    const onClick = (i) => {\n        const now = `${year}/${month}/${i + 1 < 10 ? `0${i + 1}` : i + 1}`;\n        setSelected(new Date(now)); // 선택한 날짜값 저장\n        setClicked(true); // 처음 선택했는지 확인하기 위해\n        setOn(i); // 선택한 일\n        setDate(now);\n        alert(selected);\n    };\n\n    // 1일이 시작되는 칸을 맞추기 위한 빈칸\n    const blank = [...Array(firstDate.getDay())].map((v, i) => (\n        <li key={i}>{''}</li>\n    ));\n\n    const list = [...Array(lastDate.getDate())].map((v, i) => {\n        /*\n      **className \n        on - 선택한 날짜에\n        today - 오늘날짜\n      \n      selected : 선택한 날짜에 class on을 주기위한 상태값 -> 선택한 연도+월+on 상태값 (일)을 체크함\n    */\n        const selectYear = selected\n            ? selected.getFullYear() === Number(year)\n            : null;\n        const selectMonth = selected\n            ? selected.getMonth() + 1 === Number(months)\n            : null;\n        return (\n            <li\n                key={i}\n                onClick={() => onClick(i)}\n                className={`${\n                    condition && i + 1 === today.getDate() ? style['today'] : ''\n                } ${selectYear && selectMonth && on === i ? style['on'] : ''}`}\n            >\n                <input value={i + 1} readOnly />\n            </li>\n        );\n    });\n\n    const days = ['일', '월', '화', '수', '목', '금', '토'].map((v) => (\n        <li key={v} className={style['day']}>\n            {v}\n        </li>\n    ));\n\n    return (\n        <div ref={calendar} className={style['calendar_container']}>\n            <div className={style['calendar_ym']}>\n                <button onClick={prevCalendar}>\n                    <MdArrowBackIos />\n                </button>\n                <p>\n                    {year}. {months}\n                </p>\n                {!condition && (\n                    <button onClick={nextCalendar}>\n                        <MdArrowForwardIos />\n                    </button>\n                )}\n            </div>\n            <ul>\n                {days}\n                {blank}\n                {list}\n            </ul>\n        </div>\n    );\n};\n\nexport default Calendar;\n","import React, { useState } from 'react';\nimport Calendar from './Calendar';\n\nconst FullCalendar = (props) => {\n    const { setDate, setCalendarHeight, clicked, setClicked, editMode } = props;\n    const today = new Date();\n    const edit = editMode ? editMode.info : null;\n    // 수정모드라면 선택한 날짜의 년도, 추가모드라면 오늘 연도를 값으로 설정\n    const [year, setYear] = useState(\n        edit ? edit.date.split('-')[0] : today.getFullYear()\n    );\n    // 수정모드라면 선택한 날짜의 월, 추가모드라면 오늘 월을 값으로 설정\n    const [month, setMonth] = useState(\n        edit ? edit.date.split('-')[1] : today.getMonth() + 1\n    );\n\n    // 해당 월의 날짜 추출하기\n    const firstDate = edit\n        ? new Date(edit.date.split('-')[0], edit.date.split('-')[1] - 1, 1)\n        : new Date(year, month - 1, 1);\n    const lastDate = edit\n        ? new Date(edit.date.split('-')[0], edit.date.split('-')[1], 0)\n        : new Date(year, month, 0);\n\n    const prevCalendar = () => {\n        if (month === 1) {\n            setYear(Number(year) - 1);\n            setMonth(12);\n        } else {\n            setYear(Number(year));\n            setMonth(Number(month) - 1);\n        }\n    };\n\n    const nextCalendar = () => {\n        if (Number(month) === 12) {\n            setYear(Number(year) + 1);\n            setMonth(1);\n        } else {\n            setYear(Number(year));\n            setMonth(Number(month) + 1);\n        }\n    };\n\n    return (\n        <>\n            <Calendar\n                setDate={setDate}\n                setCalendarHeight={setCalendarHeight}\n                firstDate={firstDate}\n                lastDate={lastDate}\n                clicked={clicked}\n                setClicked={setClicked}\n                editMode={editMode}\n                year={year}\n                month={month}\n                today={today}\n                prevCalendar={prevCalendar}\n                nextCalendar={nextCalendar}\n            />\n        </>\n    );\n};\n\nexport default FullCalendar;\n","import React, { useState, useEffect, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Header from '../common/Header';\nimport FullCalendar from './FullCalendar';\nimport { store } from '../../App';\nimport style from '../../assets/css/pay.module.css';\n\nfunction Pay() {\n    const [state, dispatch] = useContext(store);\n    const [calendarHeight, setCalendarHeight] = useState(0);\n    const [date, setDate] = useState(null);\n    const [year, setYear] = useState('');\n    const [month, setMonth] = useState('');\n    const [day, setDay] = useState('');\n    const [clicked, setClicked] = useState(false); // 클릭여부 확인\n    const [selected, setSelected] = useState('food');\n    const [spending, setSpending] = useState('');\n    const [spendContent, setSpendContent] = useState('');\n    const [price, setPrice] = useState('');\n    const login = state.user_name ? '' : `${style['notLogin']}`; // 로그인상태인지 체크\n    const edit = state.edit_info ? state.edit_info : null; // 수정모드 체크\n    const history = useHistory();\n\n    useEffect(() => {\n        if (date && clicked) {\n            // 선택한 달력이 있을때\n            console.log(date);\n            const getFullDate = date.split('/');\n            setYear(getFullDate[0]);\n            setMonth(getFullDate[1]);\n            setDay(getFullDate[2]);\n        }\n        if (edit && edit.info && !clicked) {\n            // 수정모드 - 달력 클릭하지 않음\n            setDate(edit.info.date);\n            if (date !== null) {\n                const getFullDate = date.split('-');\n                setYear(getFullDate[0]);\n                setMonth(getFullDate[1]);\n                setDay(getFullDate[2]);\n            }\n            setSelected(edit.info.kinds);\n            setSpending(edit.info.spending);\n            setSpendContent(edit.info.spendContent);\n            setPrice(edit.info.price);\n        }\n    }, [date]);\n\n    const handleChangeSelect = (e) => {\n        setSelected(e.target.value);\n    };\n\n    const handleSpending = (e) => {\n        setSpending(e.target.value);\n    };\n\n    const handleSpendContent = (e) => {\n        setSpendContent(e.target.value);\n    };\n\n    const handlePrice = (e) => {\n        setPrice(e.target.value);\n    };\n\n    const handleSubmit = (e) => {\n        const editMode = e.target.innerText === '수정하기';\n\n        if (!editMode) {\n            if (!date) return alert('날짜를 선택해주세요');\n            if (spending.length === 0) return alert('지출/수입을 선택해주세요');\n        }\n        if (spendContent.length === 0)\n            return alert('지출/수입 내용을 입력해주세요');\n        if (price.length === 0) return alert('금액을 입력해주세요.');\n\n        let existingEntries = JSON.parse(localStorage.getItem('money_list'));\n        if (existingEntries == null) existingEntries = [];\n\n        const info = {\n            number: existingEntries.length + 1,\n            date: `${year}-${month}-${day}`,\n            kinds: selected,\n            spending: spending,\n            spendContent: spendContent,\n            price: price,\n        };\n\n        // 수정모드\n        if (editMode) {\n            const editInfo = edit.info;\n            info.number = editInfo.number;\n\n            const filterInfo = existingEntries.filter((v) => {\n                if (v.number !== editInfo.number) return v;\n            });\n\n            filterInfo.push(info);\n            localStorage.setItem('money_list', JSON.stringify(filterInfo));\n            dispatch({ type: 'ADD_MONEY_IFNO', money_list: filterInfo });\n            localStorage.removeItem('edit_info');\n            dispatch({ type: 'EDIT_MONEY_IFNO', edit_info: null });\n        } else {\n            // 추가모드\n            existingEntries.push(info);\n            localStorage.setItem('money_list', JSON.stringify(existingEntries));\n            dispatch({ type: 'ADD_MONEY_IFNO', money_list: existingEntries });\n        }\n\n        history.push('/');\n    };\n\n    return (\n        <>\n            <Header class=\"pay\" />\n            <section className={`${style['pay_container']} ${login}`}>\n                <FullCalendar\n                    setDate={setDate}\n                    setCalendarHeight={setCalendarHeight}\n                    clicked={clicked}\n                    setClicked={setClicked}\n                    editMode={edit}\n                />\n                <ul\n                    className={style['pay_form']}\n                    style={{ marginTop: `${calendarHeight}px` }}\n                >\n                    <li className={style['date']}>\n                        <label>날짜</label>\n                        <div>\n                            <input value={year} placeholder=\"년\" readOnly />\n                            <input value={month} placeholder=\"월\" readOnly />\n                            <input value={day} placeholder=\"일\" readOnly />\n                        </div>\n                    </li>\n                    <li className={style['kinds']}>\n                        <label>지출형태</label>\n                        <select onChange={handleChangeSelect} value={selected}>\n                            <option value=\"food\">식비</option>\n                            <option value=\"shopping\">쇼핑</option>\n                            <option value=\"transportation\">교통비</option>\n                            <option value=\"coffee\">커피</option>\n                            <option value=\"date\">데이트</option>\n                            <option value=\"culture\">문화생활</option>\n                            <option value=\"event\">경조사</option>\n                            <option value=\"selfImprovement\">자기계발</option>\n                            <option value=\"exercise\">운동</option>\n                        </select>\n                    </li>\n                    <li className={style['content']}>\n                        <label>내용</label>\n                        <div>\n                            <input\n                                id=\"spending\"\n                                type=\"radio\"\n                                name=\"condition\"\n                                value=\"지출\"\n                                onClick={handleSpending}\n                            />\n                            <label\n                                htmlFor=\"spending\"\n                                className={spending === '지출' ? style.on : ''}\n                            >\n                                지출\n                            </label>\n                            <input\n                                id=\"income\"\n                                type=\"radio\"\n                                name=\"condition\"\n                                value=\"수입\"\n                                onClick={handleSpending}\n                            />\n                            <label\n                                htmlFor=\"income\"\n                                className={spending === '수입' ? style.on : ''}\n                            >\n                                수입\n                            </label>\n                        </div>\n                        <input\n                            onChange={handleSpendContent}\n                            value={spendContent}\n                            placeholder=\"내용을 입력하세요 (예: 도서 구입)\"\n                            required\n                        />\n                    </li>\n                    <li className={style['price']}>\n                        <label>금액</label>\n                        <input\n                            onChange={handlePrice}\n                            value={price}\n                            type=\"number\"\n                            placeholder=\"금액을 입력하세요 (예: 18000)\"\n                            required\n                        />\n                    </li>\n                    <li className={style['send']}>\n                        <button\n                            onClick={handleSubmit}\n                            className={style['pay_confirm']}\n                        >\n                            {edit ? '수정하기' : '입력하기'}\n                        </button>\n                    </li>\n                </ul>\n            </section>\n        </>\n    );\n}\n\nexport default Pay;\n","import React, { useReducer } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Main from './components/main/Main';\nimport NotFound from './components/common/NotFound';\nimport User from './components/user/User';\nimport reducer from './components/reducers/reducer';\nimport Pay from './components/pay/Pay';\n\n// localStorage에서 사용자 이름 받아오기\nconst initialState = {\n    user_name: JSON.parse(localStorage.getItem('userName'))?.name,\n    money_list: JSON.parse(localStorage.getItem('money_list')) || [],\n    edit_info: JSON.parse(localStorage.getItem('edit_info')) || null,\n};\n\nexport const store = React.createContext();\n\nfunction App() {\n    const [state, dispatch] = useReducer(reducer, initialState);\n\n    return (\n        <store.Provider value={[state, dispatch]}>\n            <div className=\"app\">\n                <Router basename={process.env.PUBLIC_URL}>\n                    <Switch>\n                        <Route path=\"/\" component={Main} exact />\n                        <Route path=\"/user\" component={User} exact />\n                        <Route path=\"/pay\" component={Pay} />\n                        <Route path={'*'} component={NotFound} />\n                    </Switch>\n                </Router>\n            </div>\n        </store.Provider>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        {/* <BrowserRouter> */}\n        <App />\n        {/* </BrowserRouter> */}\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tab_container\":\"main_tab_container__3bRdL\",\"on\":\"main_on__2V2Wt\",\"book_list\":\"main_book_list__268qZ\",\"empty\":\"main_empty__1P3-A\",\"each\":\"main_each__1APaT\",\"same\":\"main_same__Rz3Ej\",\"icon_box\":\"main_icon_box__3F5-B\",\"income\":\"main_income__1V2pR\",\"cost\":\"main_cost__9fuUf\",\"remove_btn\":\"main_remove_btn__1of2D\",\"add_btn\":\"main_add_btn__2zWdW\"};"],"sourceRoot":""}
{"version":3,"sources":["assets/css/pay.module.css","assets/css/modal.module.css","assets/css/calendar.module.css","assets/css/header.module.css","assets/css/statistics.module.css","assets/css/notFound.module.css","assets/css/user.module.css","components/common/Modal.js","components/common/Header.js","components/common/Statistics.js","components/main/Main.js","components/common/NotFound.js","components/user/User.js","components/reducers/reducer.js","components/reducers/types.js","components/pay/Calendar.js","components/pay/FullCalendar.js","components/pay/Pay.js","App.js","reportWebVitals.js","index.js","assets/css/main.module.css"],"names":["module","exports","Modal","props","open","close","header","confirm","agree","editText","edit","className","style","onClick","color","icon","children","btn","Header","useState","modalOpen","setModalOpen","useContext","store","state","dispatch","history","useHistory","url","location","pathname","edit_info","classes","class","useEffect","window","performance","navigation","type","localStorage","removeItem","userEdit","push","to","user_name","money_list","CgUserRemove","CgUserAdd","Statistics","income","setIncome","cost","setCost","costData","setcostData","data","value","title","label","kindsData","dateIncome","length","map","val","spending","idx","findIndex","v","kinds","Number","price","reduce","sum","item","filteDate","filter","closeModal","toString","replace","lineWidth","dataEntry","labelPosition","Main","sort","a","b","Date","date","list","setList","tabClass","setTabClass","iconType","iconInfo","handleList","e","target","innerText","ar","List","i","same","typeSpend","typeIdx","borderColor","spendContent","Obj","info","setItem","JSON","stringify","handleEdit","filterVal","parse","getItem","number","handleRemove","NotFound","User","name","userName","setUserName","onChange","maxLength","placeholder","alert","userObj","reducer","action","Calendar","setDate","setCalendarHeight","clicked","setClicked","editMode","firstDate","lastDate","year","month","today","prevCalendar","nextCalendar","on","setOn","selected","setSelected","calendar","useRef","hasToday","condition","getFullYear","getMonth","months","String","current","clientHeight","getEditDate","split","blank","Array","getDay","getDate","selectYear","selectMonth","now","readOnly","days","ref","FullCalendar","setYear","setMonth","Pay","calendarHeight","day","setDay","setSpending","setSpendContent","setPrice","login","getFullDate","handleSpending","marginTop","id","htmlFor","required","existingEntries","editInfo","filterInfo","initialState","React","createContext","App","useReducer","Provider","basename","process","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7aa38d6f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"pay_container\":\"pay_pay_container__2QXQk\",\"notLogin\":\"pay_notLogin__3jDdZ\",\"pay_form\":\"pay_pay_form__1xLSP\",\"date\":\"pay_date__2iAB8\",\"kinds\":\"pay_kinds__22qzW\",\"content\":\"pay_content__InvQk\",\"on\":\"pay_on__2NGle\",\"price\":\"pay_price__1WoVH\",\"send\":\"pay_send__1OwqW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"modal_modal__2zMie\",\"modal-show\":\"modal_modal-show__b5Ypy\",\"header\":\"modal_header__24UJn\",\"btn\":\"modal_btn__2zNPo\",\"openModal\":\"modal_openModal__20lJl\",\"modal-bg-show\":\"modal_modal-bg-show__3Gkia\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"calendar_container\":\"calendar_calendar_container__Hn3n-\",\"calendar_ym\":\"calendar_calendar_ym__2MGIP\",\"day\":\"calendar_day__25cxU\",\"today\":\"calendar_today__3oC3m\",\"on\":\"calendar_on__3b-fT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__1ikAd\",\"main\":\"header_main__3XAFq\",\"pay\":\"header_pay__iGNTg\",\"btn\":\"header_btn__7spe1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics_container\":\"statistics_statistics_container__2V3b4\",\"left\":\"statistics_left__3YhMS\",\"right\":\"statistics_right__3R53s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"notFound_container__3VD6O\",\"top\":\"notFound_top__2TW10\",\"text\":\"notFound_text__LjRSs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user_form\":\"user_user_form__1Cr-4\",\"cancel_btn\":\"user_cancel_btn__JOjYe\"};","import React from \"react\";\r\nimport { IoMdClose } from \"react-icons/io\";\r\nimport style from \"../../assets/css/modal.module.css\";\r\n\r\nconst Modal = (props) => {\r\n  // 열기, 닫기, 모달 헤더 텍스트를 부모로부터 받아옴\r\n  const { open, close, header, confirm, agree, editText, edit } = props;\r\n\r\n  return (\r\n    // 모달이 열릴때 openModal 클래스가 생성된다.\r\n    <div\r\n      className={open ? `${style['openModal']} ${style['modal']}` : `${style.['modal']}`}\r\n    >\r\n      {open ? (\r\n        <section>\r\n          <div className={style.header}>\r\n            {close && (\r\n              <button onClick={close}>\r\n                <IoMdClose color=\"#323232\" />\r\n              </button>\r\n            )}\r\n            {props.icon && <props.icon color=\"#f55c34\" />}\r\n            <h1>{header}</h1>\r\n            <p>{props.children}</p>\r\n          </div>\r\n          <div className={style.btn}>\r\n            {agree && <button onClick={confirm}>{agree}</button>}\r\n            {editText && <button onClick={edit}>{editText}</button>}\r\n          </div>\r\n        </section>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\nexport default Modal;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport { IoArrowBack } from \"react-icons/io5\";\r\nimport { FiGrid } from \"react-icons/fi\";\r\nimport { HiOutlineTrash } from \"react-icons/hi\";\r\nimport { CgUserAdd, CgUserRemove } from \"react-icons/cg\";\r\nimport { store } from \"../../App\";\r\nimport style from \"../../assets/css/header.module.css\";\r\nimport Modal from \"./Modal\";\r\n\r\nconst Header = (props) => {\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [state, dispatch] = useContext(store);\r\n  const history = useHistory();\r\n  const url = history.location.pathname;\r\n  const edit = state.edit_info ? state.edit_info : null; // 수정모드 체크\r\n  const classes = props.class ? style[props.class] : \"\";\r\n\r\n  useEffect(() => {\r\n    // 수정모드가 아닐때 메인, 로그인 페이지에서 수정모드정보 삭제\r\n    // 수정모드면 수정모드정보 유지\r\n    if (window.performance || window.history) {\r\n      if (window.performance.navigation.type == 1 || window.history) {\r\n        if (url !== \"/pay\" && state.edit_info !== null) {\r\n          localStorage.removeItem(\"edit_info\");\r\n          dispatch({ type: \"EDIT_MONEY_IFNO\", edit_info: null });\r\n        }\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const openModal = () => {\r\n    setModalOpen(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setModalOpen(false);\r\n  };\r\n\r\n  const confirm = () => {\r\n    localStorage.removeItem(\"money_list\");\r\n    localStorage.removeItem(\"user_name\");\r\n    dispatch({ type: \"ADD_MONEY_IFNO\", money_list: [] });\r\n    dispatch({ type: \"SET_USER_NAME\", user_name: null });\r\n    setModalOpen(false);\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const userEdit = () => {\r\n    history.push(\"/user\");\r\n  };\r\n\r\n  return (\r\n    <header className={`${style[\"header\"]} ${classes}`}>\r\n      {url === \"/pay\" ? (\r\n        <>\r\n          <Link to={\"/\"} className={style[\"btn\"]}>\r\n            <IoArrowBack color=\"#fff\" />\r\n          </Link>\r\n          <h1>{edit ? \"거래 수정하기\" : \"거래 추가하기\"}</h1>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h1>Money book</h1>\r\n          <button onClick={openModal}>\r\n            {state.user_name && <HiOutlineTrash color=\"#323232\" />}\r\n          </button>\r\n        </>\r\n      )}\r\n      {state.user_name ? (\r\n        <Modal\r\n          open={modalOpen}\r\n          confirm={confirm}\r\n          close={closeModal}\r\n          edit={userEdit}\r\n          icon={CgUserRemove}\r\n          header={`${state[\"user_name\"]} 사용자 삭제`}\r\n          agree=\"삭제하기\"\r\n          editText=\"수정하기\"\r\n        >\r\n          삭제버튼을 누르시면 사용자의 전체 기록 및 <br />\r\n          정보가 삭제되고 복구 할 수 없습니다.\r\n        </Modal>\r\n      ) : (\r\n        <>\r\n          {url !== \"/pay\" ? (\r\n            <Link to={\"/user\"} className={style[\"btn\"]}>\r\n              <FiGrid color=\"#323232\" />\r\n            </Link>\r\n          ) : (\r\n            <Modal\r\n              open={true}\r\n              confirm={userEdit}\r\n              icon={CgUserAdd}\r\n              header=\"등록된 사용자가 없습니다\"\r\n              agree=\"이동하기\"\r\n            >\r\n              내역을 입력하고 싶으시면 <br />\r\n              새로운 사용자를 입력해 주세요.\r\n            </Modal>\r\n          )}\r\n        </>\r\n      )}\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport { store } from \"../../App\";\r\nimport { PieChart } from \"react-minimal-pie-chart\";\r\nimport Modal from \"./Modal\";\r\nimport style from \"../../assets/css/statistics.module.css\";\r\n\r\nfunction Statistics() {\r\n  const [state] = useContext(store);\r\n  const [income, setIncome] = useState(0);\r\n  const [cost, setCost] = useState(0);\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [costData, setcostData] = useState(null);\r\n\r\n  // 지출\r\n  let data = [\r\n    { value: 0, color: \"#9b1b30\", title: \"food\", label: \"음식\" },\r\n    { value: 0, color: \"#5a5b9f\", title: \"shopping\", label: \"쇼핑\" },\r\n    { value: 0, color: \"#e2583e\", title: \"transportation\", label: \"교통\" },\r\n    { value: 0, color: \"#955251\", title: \"coffee\", label: \"커피\" },\r\n    { value: 0, color: \"#c74375\", title: \"date\", label: \"데이트\" },\r\n    { value: 0, color: \"#53b0ae\", title: \"cluture\", label: \"문화생활\" },\r\n    { value: 0, color: \"#88b04b\", title: \"event\", label: \"이벤트\" },\r\n    { value: 0, color: \"#5f4b8b\", title: \"selfImprovement\", label: \"자기계발\" },\r\n    { value: 0, color: \"#0c4a86\", title: \"exercise\", label: \"운동\" },\r\n    { value: 0, color: \"#7d8f96\", title: \"etc\", label: \"기타\" },\r\n  ];\r\n\r\n  let kindsData = [\r\n    { value: cost, color: \"#b91f32\", label: \"지출\" },\r\n    {\r\n      value: income,\r\n      color: \"#53aa00\",\r\n      label: \"수입\",\r\n    },\r\n  ];\r\n\r\n  const dateIncome = { value: 0 };\r\n  state.money_list.length > 0 &&\r\n    state.money_list.map((val) => {\r\n      if (val.spending === \"지출\") {\r\n        const idx = data.findIndex((v) => v.title === val.kinds);\r\n        data[idx].value += Number(val.price);\r\n      } else {\r\n        dateIncome.value += Number(val.price);\r\n      }\r\n    });\r\n\r\n  useEffect(() => {\r\n    if (state.money_list) {\r\n      // 지출금, 수입금\r\n      setCost(data.reduce((sum, item) => sum + Number(item.value), 0));\r\n      setIncome(dateIncome.value);\r\n\r\n      const filteDate = data.filter((v) => {\r\n        if (v.value !== 0) return v;\r\n      });\r\n\r\n      setcostData(filteDate);\r\n    }\r\n  }, [cost, income]);\r\n\r\n  const openModal = () => {\r\n    setModalOpen(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setModalOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={style[\"statistics_container\"]}>\r\n      <div className={style[\"left\"]}>\r\n        <h2>\r\n          <span>지출금</span>\r\n          {cost.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n        </h2>\r\n        <br />\r\n        <h4>\r\n          <span>수입금</span>\r\n          {income.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n        </h4>\r\n      </div>\r\n      <div className={style[\"right\"]}>\r\n        {state.money_list.length > 0 && (\r\n          <PieChart\r\n            lineWidth={65}\r\n            onClick={openModal}\r\n            data={kindsData.filter((v) => {\r\n              if (v.value !== 0) return v;\r\n            })}\r\n            label={(props) => {\r\n              return props.dataEntry.label;\r\n            }}\r\n            labelPosition={62}\r\n          />\r\n        )}\r\n      </div>\r\n      <Modal open={modalOpen} confirm={closeModal} close={closeModal}>\r\n        <PieChart\r\n          lineWidth={80}\r\n          data={costData}\r\n          labelPosition={75}\r\n          label={(props) => {\r\n            return props.dataEntry.label;\r\n          }}\r\n        />\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Statistics;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport Header from \"../common/Header\";\r\nimport { store } from \"../../App\";\r\nimport { IoFastFoodOutline, IoSubwayOutline } from \"react-icons/io5\";\r\nimport { FaUserFriends } from \"react-icons/fa\";\r\nimport { FiCoffee } from \"react-icons/fi\";\r\nimport { RiMovie2Line } from \"react-icons/ri\";\r\nimport { GiPartyPopper } from \"react-icons/gi\";\r\nimport { BsBook } from \"react-icons/bs\";\r\nimport { CgGym } from \"react-icons/cg\";\r\nimport { BiDotsHorizontalRounded } from \"react-icons/bi\";\r\nimport {\r\n  MdOutlineShoppingBasket,\r\n  MdOutlineArrowForwardIos,\r\n} from \"react-icons/md\";\r\nimport style from \"../../assets/css/main.module.css\";\r\nimport Statistics from \"../common/Statistics\";\r\n\r\nfunction Main() {\r\n  const [state, dispatch] = useContext(store);\r\n  let { money_list } = state;\r\n  money_list.sort((a, b) => {\r\n    // 날짜 정렬\r\n    const d1 = new Date(a.date);\r\n    const d2 = new Date(b.date);\r\n    return d1 - d2;\r\n  });\r\n  const [list, setList] = useState(money_list);\r\n  const [tabClass, setTabClass] = useState(\"전체내역\");\r\n  const iconType = [\r\n    <IoFastFoodOutline color=\"#9b1b30\" />,\r\n    <MdOutlineShoppingBasket color=\"#5a5b9f\" />,\r\n    <IoSubwayOutline color=\"#e2583e\" />,\r\n    <FiCoffee color=\"#955251\" />,\r\n    <FaUserFriends color=\"#c74375\" />,\r\n    <RiMovie2Line color=\"#53b0ae\" />,\r\n    <GiPartyPopper color=\"#88b04b\" />,\r\n    <BsBook color=\"#5f4b8b\" />,\r\n    <CgGym color=\"#0c4a86\" />,\r\n    <BiDotsHorizontalRounded color=\"#7d8f96\" />,\r\n  ];\r\n  const iconInfo = [\r\n    { type: \"food\", color: \"#9b1b30\" },\r\n    { type: \"shopping\", color: \"#5a5b9f\" },\r\n    { type: \"transportation\", color: \"#e2583e\" },\r\n    { type: \"coffee\", color: \"#955251\" },\r\n    { type: \"date\", color: \"#c74375\" },\r\n    { type: \"culture\", color: \"#53b0ae\" },\r\n    { type: \"event\", color: \"#88b04b\" },\r\n    { type: \"selfImprovement\", color: \"#5f4b8b\" },\r\n    { type: \"exercise\", color: \"#0c4a86\" },\r\n    { type: \"etc\", color: \"#7d8f96\" },\r\n  ];\r\n  const history = useHistory();\r\n\r\n  const handleEdit = (val) => {\r\n    const Obj = { info: val };\r\n    localStorage.setItem(\"edit_info\", JSON.stringify(Obj));\r\n    dispatch({ type: \"EDIT_MONEY_IFNO\", edit_info: Obj });\r\n    history.push(\"/pay\");\r\n  };\r\n\r\n  const handleRemove = (val) => {\r\n    let existingEntries = JSON.parse(localStorage.getItem(\"money_list\"));\r\n    const filterVal = existingEntries.filter((v) => {\r\n      if (val.number !== v.number && val.date !== v.date) return v;\r\n    });\r\n    localStorage.setItem(\"money_list\", JSON.stringify(filterVal));\r\n    dispatch({ type: \"ADD_MONEY_IFNO\", money_list: filterVal });\r\n    setList(filterVal);\r\n  };\r\n\r\n  const handleList = (e) => {\r\n    const target = e.target.innerText;\r\n    setTabClass(target);\r\n    if (target === \"전체내역\") {\r\n      setList(money_list);\r\n    } else {\r\n      let ar = [];\r\n      money_list.map((val) => {\r\n        if (val.spending === target) ar.push(val);\r\n      });\r\n      setList(ar);\r\n    }\r\n  };\r\n\r\n  const List = list.map((val, i) => {\r\n    // 수입, 지출에 따라 값 필터\r\n    const same = i > 0 && list[i - 1].date === list[i].date;\r\n    const typeSpend = val.spending === \"수입\";\r\n    const typeIdx = iconInfo.findIndex((v) => v.type === val.kinds);\r\n\r\n    return (\r\n      <li key={i} className={same ? style[\"same\"] : style[\"each\"]}>\r\n        {!same && <h2>{val.date}</h2>}\r\n        <ul>\r\n          <li>\r\n            <div\r\n              className={style[\"icon_box\"]}\r\n              style={{ borderColor: iconInfo[typeIdx].color }}\r\n            >\r\n              {iconType[typeIdx]}\r\n            </div>\r\n            <div>\r\n              <b>{val.kinds}</b>\r\n              <p>{val.spendContent}</p>\r\n            </div>\r\n          </li>\r\n          <li>\r\n            <span className={typeSpend ? style[\"income\"] : style[\"cost\"]}>\r\n              {typeSpend ? \"+ \" : \"- \"}\r\n              {val.price.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n            </span>\r\n            <button onClick={() => handleEdit(val)}>\r\n              <MdOutlineArrowForwardIos color=\"#adacb4\" />\r\n            </button>\r\n          </li>\r\n        </ul>\r\n        <button\r\n          onClick={() => handleRemove(val)}\r\n          className={style[\"remove_btn\"]}\r\n        >\r\n          삭제하기\r\n        </button>\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Header class=\"main\" />\r\n      <Statistics />\r\n      <div className={style[\"tab_container\"]}>\r\n        <button\r\n          onClick={handleList}\r\n          className={tabClass === \"전체내역\" ? style[\"on\"] : \"\"}\r\n        >\r\n          전체내역\r\n        </button>\r\n        <button\r\n          onClick={handleList}\r\n          className={tabClass === \"수입\" ? style[\"on\"] : \"\"}\r\n        >\r\n          수입\r\n        </button>\r\n        <button\r\n          onClick={handleList}\r\n          className={tabClass === \"지출\" ? style[\"on\"] : \"\"}\r\n        >\r\n          지출\r\n        </button>\r\n      </div>\r\n      <ul className={style[\"book_list\"]}>\r\n        {list.length === 0 ? (\r\n          <li className={style[\"empty\"]}>거래내역이 없습니다.</li>\r\n        ) : (\r\n          List\r\n        )}\r\n      </ul>\r\n      <Link className={style[\"add_btn\"]} to={\"/pay\"}>\r\n        내역 추가하기\r\n      </Link>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport style from '../../assets/css/notFound.module.css';\r\n\r\nfunction NotFound() {\r\n    return (\r\n        <section className={style['container']}>\r\n            <div className={style['top']}>\r\n                <h1>\r\n                    4<span>0</span>4\r\n                </h1>\r\n            </div>\r\n            <div className={style['text']}>\r\n                <h3>페이지를 찾을 수 없습니다</h3>\r\n                <p>\r\n                    페이지가 존재하지 않거나, 사용할 수 없는 페이지입니다.\r\n                    <br /> 입력하신 주소가 정확한지 다시 한 번 확인해주세요.\r\n                </p>\r\n                <Link to=\"/\">메인으로</Link>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default NotFound;\r\n","import React, { useState, useContext } from 'react';\r\nimport { useHistory, Link } from 'react-router-dom';\r\nimport { GiWallet } from 'react-icons/gi';\r\nimport { store } from '../../App';\r\nimport style from '../../assets/css/user.module.css';\r\n\r\nfunction User() {\r\n    const [state, dispatch] = useContext(store);\r\n    const history = useHistory();\r\n    const { user_name } = state;\r\n    const name = user_name ? user_name : '';\r\n    const [userName, setUserName] = useState(name);\r\n\r\n    const onChange = (e) => {\r\n        setUserName(e.target.value);\r\n    };\r\n\r\n    const onClick = () => {\r\n        if (userName.length === 0) return alert('이름을 입력해주세요');\r\n        const userObj = { name: userName };\r\n        localStorage.setItem('userName', JSON.stringify(userObj));\r\n        dispatch({ type: 'SET_USER_NAME', user_name: userName });\r\n        history.push('/');\r\n    };\r\n\r\n    return (\r\n        <section className={style['user_form']}>\r\n            <header>\r\n                <div>\r\n                    <GiWallet color=\"#323232\" />\r\n                </div>\r\n            </header>\r\n            <form>\r\n                {user_name ? (\r\n                    <>\r\n                        <h1>사용자 수정</h1>\r\n                        <p>새로운 사용자를 입력해주세요.</p>\r\n                    </>\r\n                ) : (\r\n                    <>\r\n                        <h1>사용자 입력</h1>\r\n                        <p>시작 전 사용자를 입력해주세요.</p>\r\n                    </>\r\n                )}\r\n\r\n                <input\r\n                    value={userName}\r\n                    onChange={onChange}\r\n                    maxLength=\"10\"\r\n                    placeholder=\"이름 (1~10글자)\"\r\n                />\r\n            </form>\r\n            <button onClick={onClick}>\r\n                {user_name ? '수정하기' : '시작하기'}\r\n            </button>\r\n            {user_name && (\r\n                <Link to=\"/\" className={style['cancel_btn']}>\r\n                    취소하기\r\n                </Link>\r\n            )}\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default User;\r\n","import { SET_USER_NAME, ADD_MONEY_IFNO, EDIT_MONEY_IFNO } from \"./types\";\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case SET_USER_NAME:\r\n      return {\r\n        ...state,\r\n        user_name: action.user_name,\r\n      };\r\n    case ADD_MONEY_IFNO:\r\n      return {\r\n        ...state,\r\n        money_list: action.money_list,\r\n      };\r\n    case EDIT_MONEY_IFNO:\r\n      return {\r\n        ...state,\r\n        edit_info: action.edit_info,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","export const SET_USER_NAME = \"SET_USER_NAME\";\r\nexport const ADD_MONEY_IFNO = \"ADD_MONEY_IFNO\";\r\nexport const EDIT_MONEY_IFNO = \"EDIT_MONEY_IFNO\";\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { MdArrowBackIos, MdArrowForwardIos } from \"react-icons/md\";\r\nimport style from \"../../assets/css/calendar.module.css\";\r\n\r\nconst Calendar = (props) => {\r\n  const {\r\n    setDate,\r\n    setCalendarHeight,\r\n    clicked,\r\n    setClicked,\r\n    editMode,\r\n    firstDate,\r\n    lastDate,\r\n    year,\r\n    month,\r\n    today,\r\n    prevCalendar,\r\n    nextCalendar,\r\n  } = props;\r\n\r\n  const [on, setOn] = useState(\"\");\r\n  const [selected, setSelected] = useState(null);\r\n  const calendar = useRef();\r\n  const hasToday = new Date(year, month - 1);\r\n  const condition =\r\n    today.getFullYear() + today.getMonth() ===\r\n    hasToday.getFullYear() + hasToday.getMonth();\r\n  const months = String(month).length === 1 ? `0${month}` : month;\r\n\r\n  useEffect(() => {\r\n    // 달력마다 높이값이 다르기 때문에\r\n    setCalendarHeight(calendar.current.clientHeight + 55);\r\n\r\n    /* \r\n      수정모드 - 아직 한번도 클릭하지 않았을때\r\n                선택한 값의 날짜를 상태값으로 불러옴\r\n    */\r\n    if (editMode && !clicked) {\r\n      const getEditDate = editMode.info.date;\r\n      setOn(Number(getEditDate.split(\"-\")[2]) - 1);\r\n      setSelected(new Date(getEditDate));\r\n    }\r\n  }, [month]);\r\n\r\n  const onClick = (i) => {\r\n    const now = `${year}/${month}/${i + 1 < 10 ? `0${i + 1}` : i + 1}`;\r\n    setSelected(new Date(now)); // 선택한 날짜값 저장\r\n    setClicked(true); // 처음 선택했는지 확인하기 위해\r\n    setOn(i); // 선택한 일\r\n    setDate(now);\r\n  };\r\n\r\n  // 1일이 시작되는 칸을 맞추기 위한 빈칸\r\n  const blank = [...Array(firstDate.getDay())].map((v, i) => (\r\n    <li key={i}>{\"\"}</li>\r\n  ));\r\n\r\n  const list = [...Array(lastDate.getDate())].map((v, i) => {\r\n    /*\r\n      **className \r\n        on - 선택한 날짜에\r\n        today - 오늘날짜\r\n      \r\n      selected : 선택한 날짜에 class on을 주기위한 상태값 -> 선택한 연도+월+on 상태값 (일)을 체크함\r\n    */\r\n    const selectYear = selected\r\n      ? selected.getFullYear() === Number(year)\r\n      : null;\r\n    const selectMonth = selected\r\n      ? selected.getMonth() + 1 === Number(months)\r\n      : null;\r\n    return (\r\n      <li\r\n        key={i}\r\n        onClick={() => onClick(i)}\r\n        className={`${\r\n          condition && i + 1 === today.getDate() ? style[\"today\"] : \"\"\r\n        } ${selectYear && selectMonth && on === i ? style[\"on\"] : \"\"}`}\r\n      >\r\n        <input value={i + 1} readOnly />\r\n      </li>\r\n    );\r\n  });\r\n\r\n  const days = [\"일\", \"월\", \"화\", \"수\", \"목\", \"금\", \"토\"].map((v) => (\r\n    <li key={v} className={style[\"day\"]}>\r\n      {v}\r\n    </li>\r\n  ));\r\n\r\n  return (\r\n    <div ref={calendar} className={style[\"calendar_container\"]}>\r\n      <div className={style[\"calendar_ym\"]}>\r\n        <button onClick={prevCalendar}>\r\n          <MdArrowBackIos />\r\n        </button>\r\n        <p>\r\n          {year}. {months}\r\n        </p>\r\n        {!condition && (\r\n          <button onClick={nextCalendar}>\r\n            <MdArrowForwardIos />\r\n          </button>\r\n        )}\r\n      </div>\r\n      <ul>\r\n        {days}\r\n        {blank}\r\n        {list}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Calendar;\r\n","import React, { useState } from 'react';\r\nimport Calendar from './Calendar';\r\n\r\nconst FullCalendar = (props) => {\r\n    const { setDate, setCalendarHeight, clicked, setClicked, editMode } = props;\r\n    const today = new Date();\r\n    const edit = editMode ? editMode.info : null;\r\n    // 수정모드라면 선택한 날짜의 년도, 추가모드라면 오늘 연도를 값으로 설정\r\n    const [year, setYear] = useState(\r\n        edit ? edit.date.split('-')[0] : today.getFullYear()\r\n    );\r\n    // 수정모드라면 선택한 날짜의 월, 추가모드라면 오늘 월을 값으로 설정\r\n    const [month, setMonth] = useState(\r\n        edit ? edit.date.split('-')[1] : today.getMonth() + 1\r\n    );\r\n\r\n    // 해당 월의 날짜 추출하기\r\n    const firstDate = edit\r\n        ? new Date(edit.date.split('-')[0], edit.date.split('-')[1] - 1, 1)\r\n        : new Date(year, month - 1, 1);\r\n    const lastDate = edit\r\n        ? new Date(edit.date.split('-')[0], edit.date.split('-')[1], 0)\r\n        : new Date(year, month, 0);\r\n\r\n    const prevCalendar = () => {\r\n        if (month === 1) {\r\n            setYear(Number(year) - 1);\r\n            setMonth(12);\r\n        } else {\r\n            setYear(Number(year));\r\n            setMonth(Number(month) - 1);\r\n        }\r\n    };\r\n\r\n    const nextCalendar = () => {\r\n        if (Number(month) === 12) {\r\n            setYear(Number(year) + 1);\r\n            setMonth(1);\r\n        } else {\r\n            setYear(Number(year));\r\n            setMonth(Number(month) + 1);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Calendar\r\n                setDate={setDate}\r\n                setCalendarHeight={setCalendarHeight}\r\n                firstDate={firstDate}\r\n                lastDate={lastDate}\r\n                clicked={clicked}\r\n                setClicked={setClicked}\r\n                editMode={editMode}\r\n                year={year}\r\n                month={month}\r\n                today={today}\r\n                prevCalendar={prevCalendar}\r\n                nextCalendar={nextCalendar}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default FullCalendar;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Header from \"../common/Header\";\r\nimport FullCalendar from \"./FullCalendar\";\r\nimport { store } from \"../../App\";\r\nimport style from \"../../assets/css/pay.module.css\";\r\n\r\nfunction Pay() {\r\n  const [state, dispatch] = useContext(store);\r\n  const [calendarHeight, setCalendarHeight] = useState(0);\r\n  const [date, setDate] = useState(null);\r\n  const [year, setYear] = useState(\"\");\r\n  const [month, setMonth] = useState(\"\");\r\n  const [day, setDay] = useState(\"\");\r\n  const [clicked, setClicked] = useState(false); // 클릭여부 확인\r\n  const [selected, setSelected] = useState(\"food\");\r\n  const [spending, setSpending] = useState(\"\");\r\n  const [spendContent, setSpendContent] = useState(\"\");\r\n  const [price, setPrice] = useState(\"\");\r\n  const login = state.user_name ? \"\" : `${style[\"notLogin\"]}`; // 로그인상태인지 체크\r\n  const edit = state.edit_info ? state.edit_info : null; // 수정모드 체크\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (date && clicked) {\r\n      // 선택한 달력이 있을때\r\n      // console.log(date);\r\n      const getFullDate = date.split(\"/\");\r\n      setYear(getFullDate[0]);\r\n      setMonth(getFullDate[1]);\r\n      setDay(getFullDate[2]);\r\n    }\r\n    if (edit && edit.info && !clicked) {\r\n      // 수정모드 - 달력 클릭하지 않음\r\n      setDate(edit.info.date);\r\n      if (date !== null) {\r\n        const getFullDate = date.split(\"-\");\r\n        setYear(getFullDate[0]);\r\n        setMonth(getFullDate[1]);\r\n        setDay(getFullDate[2]);\r\n      }\r\n      setSelected(edit.info.kinds);\r\n      setSpending(edit.info.spending);\r\n      setSpendContent(edit.info.spendContent);\r\n      setPrice(edit.info.price);\r\n    }\r\n  }, [date]);\r\n\r\n  const handleChangeSelect = (e) => {\r\n    setSelected(e.target.value);\r\n  };\r\n\r\n  const handleSpending = (e) => {\r\n    setSpending(e.target.value);\r\n  };\r\n\r\n  const handleSpendContent = (e) => {\r\n    setSpendContent(e.target.value);\r\n  };\r\n\r\n  const handlePrice = (e) => {\r\n    setPrice(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    const editMode = e.target.innerText === \"수정하기\";\r\n\r\n    if (!editMode) {\r\n      if (!date) return alert(\"날짜를 선택해주세요\");\r\n      if (spending.length === 0) return alert(\"지출/수입을 선택해주세요\");\r\n    }\r\n    if (spendContent.length === 0)\r\n      return alert(\"지출/수입 내용을 입력해주세요\");\r\n    if (price.length === 0) return alert(\"금액을 입력해주세요.\");\r\n\r\n    let existingEntries = JSON.parse(localStorage.getItem(\"money_list\"));\r\n    if (existingEntries == null) existingEntries = [];\r\n\r\n    const info = {\r\n      number: existingEntries.length + 1,\r\n      date: `${year}-${month}-${day}`,\r\n      kinds: selected,\r\n      spending: spending,\r\n      spendContent: spendContent,\r\n      price: price,\r\n    };\r\n\r\n    // 수정모드\r\n    if (editMode) {\r\n      const editInfo = edit.info;\r\n      info.number = editInfo.number;\r\n\r\n      const filterInfo = existingEntries.filter((v) => {\r\n        if (v.number !== editInfo.number) return v;\r\n      });\r\n\r\n      filterInfo.push(info);\r\n      localStorage.setItem(\"money_list\", JSON.stringify(filterInfo));\r\n      dispatch({ type: \"ADD_MONEY_IFNO\", money_list: filterInfo });\r\n      localStorage.removeItem(\"edit_info\");\r\n      dispatch({ type: \"EDIT_MONEY_IFNO\", edit_info: null });\r\n    } else {\r\n      // 추가모드\r\n      existingEntries.push(info);\r\n      localStorage.setItem(\"money_list\", JSON.stringify(existingEntries));\r\n      dispatch({ type: \"ADD_MONEY_IFNO\", money_list: existingEntries });\r\n    }\r\n\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header class=\"pay\" />\r\n      <section className={`${style[\"pay_container\"]} ${login}`}>\r\n        <FullCalendar\r\n          setDate={setDate}\r\n          setCalendarHeight={setCalendarHeight}\r\n          clicked={clicked}\r\n          setClicked={setClicked}\r\n          editMode={edit}\r\n        />\r\n        <ul\r\n          className={style[\"pay_form\"]}\r\n          style={{ marginTop: `${calendarHeight}px` }}\r\n        >\r\n          <li className={style[\"date\"]}>\r\n            <label>날짜</label>\r\n            <div>\r\n              <input value={year} placeholder=\"년\" readOnly />\r\n              <input value={month} placeholder=\"월\" readOnly />\r\n              <input value={day} placeholder=\"일\" readOnly />\r\n            </div>\r\n          </li>\r\n          <li className={style[\"kinds\"]}>\r\n            <label>지출형태</label>\r\n            <select onChange={handleChangeSelect} value={selected}>\r\n              <option value=\"food\">식비</option>\r\n              <option value=\"shopping\">쇼핑</option>\r\n              <option value=\"transportation\">교통비</option>\r\n              <option value=\"coffee\">커피</option>\r\n              <option value=\"date\">데이트</option>\r\n              <option value=\"culture\">문화생활</option>\r\n              <option value=\"event\">경조사</option>\r\n              <option value=\"selfImprovement\">자기계발</option>\r\n              <option value=\"exercise\">운동</option>\r\n              <option value=\"etc\">기타</option>\r\n            </select>\r\n          </li>\r\n          <li className={style[\"content\"]}>\r\n            <label>내용</label>\r\n            <div>\r\n              <input\r\n                id=\"spending\"\r\n                type=\"radio\"\r\n                name=\"condition\"\r\n                value=\"지출\"\r\n                onClick={handleSpending}\r\n              />\r\n              <label\r\n                htmlFor=\"spending\"\r\n                className={spending === \"지출\" ? style.on : \"\"}\r\n              >\r\n                지출\r\n              </label>\r\n              <input\r\n                id=\"income\"\r\n                type=\"radio\"\r\n                name=\"condition\"\r\n                value=\"수입\"\r\n                onClick={handleSpending}\r\n              />\r\n              <label\r\n                htmlFor=\"income\"\r\n                className={spending === \"수입\" ? style.on : \"\"}\r\n              >\r\n                수입\r\n              </label>\r\n            </div>\r\n            <input\r\n              onChange={handleSpendContent}\r\n              value={spendContent}\r\n              placeholder=\"내용을 입력하세요 (예: 도서 구입)\"\r\n              required\r\n            />\r\n          </li>\r\n          <li className={style[\"price\"]}>\r\n            <label>금액</label>\r\n            <input\r\n              onChange={handlePrice}\r\n              value={price}\r\n              type=\"number\"\r\n              placeholder=\"금액을 입력하세요 (예: 18000)\"\r\n              required\r\n            />\r\n          </li>\r\n          <li className={style[\"send\"]}>\r\n            <button onClick={handleSubmit} className={style[\"pay_confirm\"]}>\r\n              {edit ? \"수정하기\" : \"입력하기\"}\r\n            </button>\r\n          </li>\r\n        </ul>\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Pay;\r\n","import React, { useReducer } from 'react';\r\nimport './App.css';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Main from './components/main/Main';\r\nimport NotFound from './components/common/NotFound';\r\nimport User from './components/user/User';\r\nimport reducer from './components/reducers/reducer';\r\nimport Pay from './components/pay/Pay';\r\n\r\n// localStorage에서 사용자 이름 받아오기\r\nconst initialState = {\r\n    user_name: JSON.parse(localStorage.getItem('userName'))?.name,\r\n    money_list: JSON.parse(localStorage.getItem('money_list')) || [],\r\n    edit_info: JSON.parse(localStorage.getItem('edit_info')) || null,\r\n};\r\n\r\nexport const store = React.createContext();\r\n\r\nfunction App() {\r\n    const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n    return (\r\n        <store.Provider value={[state, dispatch]}>\r\n            <div className=\"app\">\r\n                <Router basename={process.env.PUBLIC_URL}>\r\n                    <Switch>\r\n                        <Route path=\"/\" component={Main} exact />\r\n                        <Route path=\"/user\" component={User} exact />\r\n                        <Route path=\"/pay\" component={Pay} />\r\n                        <Route path={'*'} component={NotFound} />\r\n                    </Switch>\r\n                </Router>\r\n            </div>\r\n        </store.Provider>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// import { BrowserRouter } from 'react-router-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        {/* <BrowserRouter> */}\r\n        <App />\r\n        {/* </BrowserRouter> */}\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tab_container\":\"main_tab_container__3ODTw\",\"on\":\"main_on__bhplX\",\"book_list\":\"main_book_list__1BW2k\",\"empty\":\"main_empty__a-D1s\",\"each\":\"main_each__2fql3\",\"same\":\"main_same__3BnnI\",\"icon_box\":\"main_icon_box__1bZqD\",\"income\":\"main_income__3co9L\",\"cost\":\"main_cost__37lS7\",\"remove_btn\":\"main_remove_btn__2phYS\",\"add_btn\":\"main_add_btn__1C_pF\"};"],"sourceRoot":""}